{"version":3,"sources":["Components/ContactList/ContacnList.module.css","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","this","type","pattern","title","required","onChange","Component","ContactLIst","contacts","className","s","contactlist","map","id","Filter","App","filter","formHandler","data","console","log","newContact","nanoid","find","contact","toLowerCase","error","text","delay","contactFilter","lowerCase","includes","changeFilter","contactsFilter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ddc74be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactlist\":\"ContacnList_contactlist__1gVqh\"};","import { number } from 'prop-types';\nimport React, { Component } from 'react';\n\nexport default class ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    // console.log(event.currentTarget)\n    this.setState({ [name]: value, [number]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    // console.log(this.state)\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n","import s from './ContacnList.module.css';\n\nexport default function ContactLIst({ contacts }) {\n  // console.log(contacts);\n  return (\n    <ol className={s.contactlist}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} id={id}>\n          <span> {name} </span>\n          <span>{number}</span>\n        </li>\n      ))}\n    </ol>\n  );\n}\n","import React from 'react';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <label>\n      Find contacts by name\n      <input type=\"search\" value={value} onChange={onChange}></input>\n    </label>\n  );\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport { nanoid } from 'nanoid';\nimport ContactForm from './Components/ContactForm';\nimport ContactLIst from './Components/ContactList';\nimport Filter from './Components/Filter/Filter';\nimport { error } from '@pnotify/core';\nimport '@pnotify/core/dist/PNotify.css';\nimport '@pnotify/core/dist/BrightTheme.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    name: '',\n    number: '',\n  };\n\n  formHandler = data => {\n    const { name, number } = data;\n    console.log(data);\n    const newContact = {\n      id: nanoid(5),\n      name,\n      number,\n    };\n    const { contacts } = this.state;\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      error({\n        text: 'That name is already in the list!',\n        delay: 1500,\n      });\n\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, newContact],\n    }));\n\n    console.log(contacts);\n  };\n\n  contactFilter = () => {\n    const { filter, contacts } = this.state;\n    const lowerCase = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(lowerCase),\n    );\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  render() {\n    const contactsFilter = this.contactFilter();\n    return (\n      <div className=\"App\">\n        <h1>Phone book</h1>\n\n        <ContactForm onSubmit={this.formHandler} />\n        <div>\n          <h2>Contacts</h2>\n          <Filter value={this.filter} onChange={this.changeFilter} />\n          <ContactLIst contacts={contactsFilter} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}