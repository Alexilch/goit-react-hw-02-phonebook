{"version":3,"sources":["Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","App.js","reportWebVitals.js","index.js","Components/ContactList/ContacnList.module.css"],"names":["ContactForm","state","name","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","this","type","pattern","title","required","onChange","Component","ContactLIst","contacts","console","log","className","s","contactlist","map","id","App","formHandler","data","newContact","nanoid","contactFilter","filter","contact","toLowerCase","contactsFilter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"8SAEqBA,E,4MACnBC,MAAQ,CACNC,KAAM,I,EAGRC,aAAe,SAAAC,GACb,MAAwBA,EAAMC,cAAtBH,EAAR,EAAQA,KAAMI,EAAd,EAAcA,MAEd,EAAKC,SAAL,eAAiBL,EAAOI,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAMK,iBAGN,EAAKC,MAAMC,SAAS,EAAKV,OACzB,EAAKW,a,EAGPA,UAAY,WACV,EAAKL,SAAS,CAAEL,KAAM,M,4CAGxB,WACE,OACE,uBAAMS,SAAUE,KAAKL,aAArB,UACE,yCAEE,uBACEM,KAAK,OACLZ,KAAK,OACLa,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRX,MAAOO,KAAKZ,MAAMC,KAClBgB,SAAUL,KAAKV,kBAGnB,wBAAQW,KAAK,SAAb,gC,GAtCiCK,a,gBCA1B,SAASC,EAAT,GAAoC,IAAbC,EAAY,EAAZA,SAEpC,OADAC,QAAQC,IAAIF,GAEV,oBAAIG,UAAWC,IAAEC,YAAjB,SACGL,EAASM,KAAI,gBAAGC,EAAH,EAAGA,GAAI1B,EAAP,EAAOA,KAAP,OACZ,oBAAa0B,GAAIA,EAAjB,SACE,+BAAO1B,KADA0B,Q,ICDXC,E,4MACJ5B,MAAQ,CACNoB,SAAU,GACVnB,KAAM,I,EAGR4B,YAAc,SAAAC,GACZ,IAAQ7B,EAAS6B,EAAT7B,KACRoB,QAAQC,IAAIQ,GACZ,IAAMC,EAAa,CACjBJ,GAAIK,YAAO,GACX/B,QAEMmB,EAAa,EAAKpB,MAAlBoB,SAER,EAAKd,UAAS,gBAAGc,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,GAAD,mBAAMA,GAAN,CAAgBW,QAG1BV,QAAQC,IAAIF,I,EAGda,cAAgB,WAEd,OADqB,EAAKjC,MAAlBoB,SACQc,QAAO,SAAAC,GAAO,OAAIA,EAAQlC,KAAKmC,kB,4CAGjD,WACE,IAAMC,EAAiBzB,KAAKqB,gBAC5B,OACE,sBAAKV,UAAU,MAAf,UACE,4CAEA,cAAC,EAAD,CAAab,SAAUE,KAAKiB,cAC5B,gCACE,0CACA,cAACV,EAAD,CAAaC,SAAUiB,c,GApCfnB,aA2CHU,ICrCAU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,YAAc,oC","file":"static/js/main.60589085.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class ContactForm extends Component {\n  state = {\n    name: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    // console.log(event.currentTarget)\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    // console.log(this.state)\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n","import s from './ContacnList.module.css';\n\nexport default function ContactLIst({ contacts }) {\n  console.log(contacts);\n  return (\n    <ol className={s.contactlist}>\n      {contacts.map(({ id, name }) => (\n        <li key={id} id={id}>\n          <span>{name}</span>\n        </li>\n      ))}\n    </ol>\n  );\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport { nanoid } from 'nanoid';\nimport ContactForm from './Components/ContactForm';\nimport ContactLIst from './Components/ContactList/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    name: '',\n  };\n\n  formHandler = data => {\n    const { name } = data;\n    console.log(data);\n    const newContact = {\n      id: nanoid(5),\n      name,\n    };\n    const { contacts } = this.state;\n\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, newContact],\n    }));\n\n    console.log(contacts);\n  };\n\n  contactFilter = () => {\n    const { contacts } = this.state;\n    return contacts.filter(contact => contact.name.toLowerCase());\n  };\n\n  render() {\n    const contactsFilter = this.contactFilter();\n    return (\n      <div className=\"App\">\n        <h1>Phone book</h1>\n\n        <ContactForm onSubmit={this.formHandler} />\n        <div>\n          <h2>Contacts</h2>\n          <ContactLIst contacts={contactsFilter} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactlist\":\"ContacnList_contactlist__1gVqh\"};"],"sourceRoot":""}